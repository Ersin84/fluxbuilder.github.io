<html lang="en"><head>
  <base href="/">
  <meta charset="UTF-8">
  <meta content="IE=Edge" http-equiv="X-UA-Compatible">
  <meta name="description" content="FluxBuilder - Flutter App Builder">

  <!-- iOS meta tags & icons -->
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="black">
  <meta name="apple-mobile-web-app-title" content="web_builder">
  <link rel="apple-touch-icon" href="icons/Icon-192.png">

  <link rel="manifest" href="manifest.json">

  <title>FluxBuilder web</title>

  <style>
    .loading {
      color: #333;
      font-family: arial, sans-serif;
      font-size: 12px;
    }

    .lds-dual-ring {
      display: inline-block;
      width: 80px;
      height: 80px;
    }

    .lds-dual-ring:after {
      content: " ";
      display: block;
      width: 44px;
      height: 44px;
      margin: 8px;
      border-radius: 50%;
      border: 4px solid #256DFD;
      border-color: #256DFD transparent #256DFD transparent;
      animation: lds-dual-ring 1.2s linear infinite;
    }

    @keyframes lds-dual-ring {
      0% {
        transform: rotate(0deg);
      }

      100% {
        transform: rotate(360deg);
      }
    }
  </style>
<script src="https://apis.google.com/_/scs/apps-static/_/js/k=oz.gapi.en_GB.L8HxoJpS-sM.O/m=auth2/rt=j/sv=1/d=1/ed=1/am=AQ/rs=AGLTcCNejPLAl6K5E0dwd7jvxrqCIVRloQ/cb=gapi.loaded_0" async=""></script><script async="" defer="" src="https://apis.google.com/js/platform.js?onload=gapiOnloadCallback" gapi_processed="true"></script><script type="text/javascript" charset="utf-8" async="" src="./assets/packages/wakelock_web/assets/no_sleep.js"></script><style></style><meta flt-viewport="" name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"><meta id="flutterweb-theme" name="theme-color" content="#0062e1"></head>

<body flt-renderer="html (auto-selected)" flt-build-mode="release" spellcheck="false" style="position: fixed; inset: 0px; overflow: hidden; padding: 0px; margin: 0px; user-select: none; touch-action: none; font: 14px sans-serif; color: red;">

<center>
  <br><br><br><br><br><br><br><br><br>
  <div class="lds-dual-ring"></div>
  <div class="loading">LOADING...</div>
</center>

<!-- This script installs service_worker.js to provide PWA functionality to
     application. For more information, see:
     https://developers.google.com/web/fundamentals/primers/service-workers -->
<script>
    var serviceWorkerVersion = '4108306167';
    var scriptLoaded = false;
    function loadMainDartJs() {
      if (scriptLoaded) {
        return;
      }
      scriptLoaded = true;
      var scriptTag = document.createElement('script');
      scriptTag.src = 'main.dart.js';
      scriptTag.type = 'application/javascript';
      document.body.append(scriptTag);
    }

    if ('serviceWorker' in navigator) {
      // Service workers are supported. Use them.
      window.addEventListener('load', function () {
        // Wait for registration to finish before dropping the <script> tag.
        // Otherwise, the browser will load the script multiple times,
        // potentially different versions.
        var serviceWorkerUrl = 'flutter_service_worker.js?v=' + serviceWorkerVersion;
        navigator.serviceWorker.register(serviceWorkerUrl)
          .then((reg) => {
            function waitForActivation(serviceWorker) {
              serviceWorker.addEventListener('statechange', () => {
                if (serviceWorker.state == 'activated') {
                  console.log('Installed new service worker.');
                  loadMainDartJs();
                }
              });
            }
            if (!reg.active && (reg.installing || reg.waiting)) {
              // No active web worker and we have installed or are installing
              // one for the first time. Simply wait for it to activate.
              waitForActivation(reg.installing ?? reg.waiting);
            } else if (!reg.active.scriptURL.endsWith(serviceWorkerVersion)) {
              // When the app updates the serviceWorkerVersion changes, so we
              // need to ask the service worker to update.
              console.log('New service worker available.');
              reg.update();
              waitForActivation(reg.installing);
            } else {
              // Existing service worker is still good.
              console.log('Loading app from service worker.');
              loadMainDartJs();
            }
          });

        // If service worker doesn't succeed in a reasonable amount of time,
        // fallback to plaint <script> tag.
        setTimeout(() => {
          if (!scriptLoaded) {
            console.warn(
              'Failed to load app from service worker. Falling back to plain <script> tag.',
            );
            loadMainDartJs();
          }
        }, 4000);
      });
    } else {
      // Service workers not supported. Just drop the <script> tag.
      loadMainDartJs();
    }
  </script>


<script src="main.dart.js" type="application/javascript"></script><flt-file-picker-inputs id="__file_picker_web-file-input"></flt-file-picker-inputs><file-selector></file-selector><flt-image-picker-inputs id="__image_picker_web-file-input"></flt-image-picker-inputs><flt-glass-pane style="position: absolute; inset: 0px;"></flt-glass-pane></body></html>